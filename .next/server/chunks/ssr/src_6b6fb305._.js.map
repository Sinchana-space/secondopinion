{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/secop2/src/ai/flows/generate-case-summary.ts"],"sourcesContent":["\r\n'use server';\r\n\r\n/**\r\n * @fileOverview AI flow to generate a case summary from a prescription image.\r\n *\r\n * - generateCaseSummary - A function that handles the case summary generation process.\r\n * - GenerateCaseSummaryInput - The input type for the generateCaseSummary function.\r\n * - GenerateCaseSummaryOutput - The return type for the generateCaseSummary function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst GenerateCaseSummaryInputSchema = z.object({\r\n  prescriptionPhotoDataUri: z\r\n    .string()\r\n    .describe(\r\n      'A photo of a prescription, as a data URI that must include a MIME type and use Base64 encoding. Expected format: data:<mimetype>;base64,<encoded_data>.'\r\n    ),\r\n});\r\nexport type GenerateCaseSummaryInput = z.infer<typeof GenerateCaseSummaryInputSchema>;\r\n\r\nconst GenerateCaseSummaryOutputSchema = z.object({\r\n  caseSummary: z.string().describe('A summary of the medication, dosage, and potential side effects.'),\r\n  disease: z.string().describe('The likely disease or condition based on the prescription.'),\r\n  likelihood: z.string().describe('The likelihood of the diagnosis (e.g., High, Medium, Low).'),\r\n  patientInfo: z.string().describe('Information and next steps for the patient regarding the potential diagnosis.'),\r\n});\r\nexport type GenerateCaseSummaryOutput = z.infer<typeof GenerateCaseSummaryOutputSchema>;\r\n\r\nexport async function generateCaseSummary(input: GenerateCaseSummaryInput): Promise<GenerateCaseSummaryOutput> {\r\n  return generateCaseSummaryFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'generateCaseSummaryPrompt',\r\n  input: {schema: GenerateCaseSummaryInputSchema},\r\n  output: {schema: GenerateCaseSummaryOutputSchema},\r\n  prompt: `You are a medical expert. You will analyze a prescription and do the following:\r\n  1.  Summarize the medication, dosage, and potential side effects for the patient in a way that's easy to understand.\r\n  2.  Based on the medication, infer the likely disease or condition it is meant to treat.\r\n  3.  State the likelihood (High, Medium, or Low) that this is the correct diagnosis.\r\n  4.  Provide helpful information and suggest next steps for a patient with this condition.\r\n\r\nPrescription Photo: {{media url=prescriptionPhotoDataUri}}`,\r\n});\r\n\r\nconst generateCaseSummaryFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateCaseSummaryFlow',\r\n    inputSchema: GenerateCaseSummaryInputSchema,\r\n    outputSchema: GenerateCaseSummaryOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n\r\n"],"names":[],"mappings":";;;;;;IA+BsB,sBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///D:/secop2/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///D:/secop2/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\n\r\nfunction Skeleton({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div\r\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Skeleton }\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///D:/secop2/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={cn(alertVariants({ variant }), className)}\r\n    {...props}\r\n  />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///D:/secop2/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///D:/secop2/src/app/%28ai%29/diagnosis/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\nimport { generateCaseSummary, GenerateCaseSummaryOutput } from \"@/ai/flows/generate-case-summary\";\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { AlertCircle, FileText, Sparkles, AlertTriangle, Info, Activity } from \"lucide-react\";\r\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\n\r\ntype SummaryData = Omit<GenerateCaseSummaryOutput, 'caseSummary'>;\r\n\r\nexport default function DiagnosisPage() {\r\n  const [data, setData] = useState<GenerateCaseSummaryOutput | null>(null);\r\n  const [prescriptionImage, setPrescriptionImage] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    let dataUri: string | null = null;\r\n    try {\r\n      dataUri = sessionStorage.getItem(\"prescriptionDataUri\");\r\n    } catch (e) {\r\n      console.error(\"Could not access sessionStorage:\", e);\r\n      setError(\"Your browser does not support sessionStorage or it is disabled. Please use a different browser.\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (dataUri) {\r\n      setPrescriptionImage(dataUri);\r\n      generateCaseSummary({ prescriptionPhotoDataUri: dataUri })\r\n        .then(response => {\r\n          setData(response);\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          setError(\"Failed to generate summary. The AI model might be unavailable or the image could not be processed.\");\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      // If no image data, redirect back to upload\r\n      router.push(\"/prescription-upload\");\r\n    }\r\n  }, [router]);\r\n\r\n  const getLikelihoodColor = (likelihood: string | undefined) => {\r\n    switch (likelihood?.toLowerCase()) {\r\n      case 'high':\r\n        return 'bg-red-500/20 text-red-500 border-red-500/30';\r\n      case 'medium':\r\n        return 'bg-yellow-500/20 text-yellow-500 border-yellow-500/30';\r\n      case 'low':\r\n        return 'bg-green-500/20 text-green-500 border-green-500/30';\r\n      default:\r\n        return 'bg-muted text-muted-foreground';\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container mx-auto max-w-6xl py-12 px-4\">\r\n       <div className=\"text-center mb-12\">\r\n        <h1 className=\"font-headline text-4xl font-bold tracking-tight text-primary sm:text-5xl lg:text-6xl\">\r\n          AI Second Opinion\r\n        </h1>\r\n        <p className=\"mt-4 text-lg text-muted-foreground\">\r\n          This is an AI-generated analysis. Always consult a qualified doctor.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid md:grid-cols-2 gap-8\">\r\n        <div>\r\n          <h2 className=\"font-headline text-2xl mb-4\">Your Prescription</h2>\r\n          <Card className=\"bg-card/50 backdrop-blur-sm border-primary/20 shadow-lg shadow-primary/5 overflow-hidden\">\r\n            <CardContent className=\"p-4\">\r\n              {prescriptionImage ? (\r\n                <div className=\"relative w-full aspect-square\">\r\n                  <Image\r\n                    src={prescriptionImage}\r\n                    alt=\"Uploaded Prescription\"\r\n                    layout=\"fill\"\r\n                    className=\"object-contain rounded-lg\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <Skeleton className=\"w-full aspect-square\" />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n        <div className=\"space-y-6\">\r\n          \r\n          <Card className=\"bg-card/50 backdrop-blur-sm border-primary/20 shadow-lg shadow-primary/5\">\r\n            <CardHeader>\r\n              <CardTitle className=\"font-headline text-xl flex items-center gap-2\">\r\n                <Activity className=\"w-6 h-6 text-accent\"/>\r\n                Potential Diagnosis\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n               {isLoading ? (\r\n                  <div className=\"space-y-2\">\r\n                    <Skeleton className=\"h-8 w-1/2\" />\r\n                    <Skeleton className=\"h-6 w-1/4\" />\r\n                  </div>\r\n                ) : error ? null : (\r\n                  <>\r\n                  <h3 className=\"text-2xl font-bold text-foreground\">{data?.disease}</h3>\r\n                  <Badge variant=\"outline\" className={`mt-2 ${getLikelihoodColor(data?.likelihood)}`}>\r\n                    Likelihood: {data?.likelihood}\r\n                  </Badge>\r\n                  </>\r\n               )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"bg-card/50 backdrop-blur-sm border-primary/20 shadow-lg shadow-primary/5\">\r\n            <CardHeader className=\"flex flex-row items-center gap-3\">\r\n              <Sparkles className=\"w-6 h-6 text-accent\"/>\r\n              <CardTitle className=\"font-headline text-xl\">Medication Summary</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isLoading ? (\r\n                <div className=\"space-y-4\">\r\n                  <Skeleton className=\"h-4 w-full\" />\r\n                  <Skeleton className=\"h-4 w-full\" />\r\n                  <Skeleton className=\"h-4 w-3/4\" />\r\n                </div>\r\n              ) : error ? (\r\n                <Alert variant=\"destructive\">\r\n                  <AlertCircle className=\"h-4 w-4\" />\r\n                  <AlertTitle>Error</AlertTitle>\r\n                  <AlertDescription>{error}</AlertDescription>\r\n                </Alert>\r\n              ) : (\r\n                <div className=\"prose prose-invert prose-p:text-muted-foreground whitespace-pre-wrap\">\r\n                  <p>{data?.caseSummary}</p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n           <Card className=\"bg-card/50 backdrop-blur-sm border-primary/20 shadow-lg shadow-primary/5\">\r\n            <CardHeader className=\"flex flex-row items-center gap-3\">\r\n              <Info className=\"w-6 h-6 text-accent\"/>\r\n              <CardTitle className=\"font-headline text-xl\">Patient Information & Next Steps</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {isLoading ? (\r\n                <div className=\"space-y-4\">\r\n                  <Skeleton className=\"h-4 w-full\" />\r\n                  <Skeleton className=\"h-4 w-5/6\" />\r\n                </div>\r\n              ) : error ? null : (\r\n                <div className=\"prose prose-invert prose-p:text-muted-foreground whitespace-pre-wrap\">\r\n                  <p>{data?.patientInfo}</p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          <Button onClick={() => router.push('/prescription-upload')} variant=\"outline\" className=\"w-full mt-6\">\r\n             Analyze Another Prescription\r\n           </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAXA;;;;;;;;;;;;AAee,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoC;IACnE,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC1E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAyB;QAC7B,IAAI;YACF,UAAU,eAAe,OAAO,CAAC;QACnC,EAAE,OAAO,GAAG;YACV,QAAQ,KAAK,CAAC,oCAAoC;YAClD,SAAS;YACT,aAAa;YACb;QACF;QAEA,IAAI,SAAS;YACX,qBAAqB;YACrB,CAAA,GAAA,0JAAA,CAAA,sBAAmB,AAAD,EAAE;gBAAE,0BAA0B;YAAQ,GACrD,IAAI,CAAC,CAAA;gBACJ,QAAQ;YACV,GACC,KAAK,CAAC,CAAA;gBACL,QAAQ,KAAK,CAAC;gBACd,SAAS;YACX,GACC,OAAO,CAAC;gBACP,aAAa;YACf;QACJ,OAAO;YACL,4CAA4C;YAC5C,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,qBAAqB,CAAC;QAC1B,OAAQ,YAAY;YAClB,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAGA,qBACE,8OAAC;QAAI,WAAU;;0BACZ,8OAAC;gBAAI,WAAU;;kCACd,8OAAC;wBAAG,WAAU;kCAAuF;;;;;;kCAGrG,8OAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;0BAKpD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA8B;;;;;;0CAC5C,8OAAC,gIAAA,CAAA,OAAI;gCAAC,WAAU;0CACd,cAAA,8OAAC,gIAAA,CAAA,cAAW;oCAAC,WAAU;8CACpB,kCACC,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4CACJ,KAAK;4CACL,KAAI;4CACJ,QAAO;4CACP,WAAU;;;;;;;;;;6DAId,8OAAC,oIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;kCAK5B,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC,gIAAA,CAAA,OAAI;gCAAC,WAAU;;kDACd,8OAAC,gIAAA,CAAA,aAAU;kDACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;;8DACnB,8OAAC,0MAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;gDAAuB;;;;;;;;;;;;kDAI/C,8OAAC,gIAAA,CAAA,cAAW;kDACR,0BACE,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;mDAEpB,QAAQ,qBACV;;8DACA,8OAAC;oDAAG,WAAU;8DAAsC,MAAM;;;;;;8DAC1D,8OAAC,iIAAA,CAAA,QAAK;oDAAC,SAAQ;oDAAU,WAAW,CAAC,KAAK,EAAE,mBAAmB,MAAM,aAAa;;wDAAE;wDACrE,MAAM;;;;;;;;;;;;;;;;;;;;0CAO7B,8OAAC,gIAAA,CAAA,OAAI;gCAAC,WAAU;;kDACd,8OAAC,gIAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,8OAAC,0MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;0DACpB,8OAAC,gIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAwB;;;;;;;;;;;;kDAE/C,8OAAC,gIAAA,CAAA,cAAW;kDACT,0BACC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;mDAEpB,sBACF,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;;8DACb,8OAAC,oNAAA,CAAA,cAAW;oDAAC,WAAU;;;;;;8DACvB,8OAAC,iIAAA,CAAA,aAAU;8DAAC;;;;;;8DACZ,8OAAC,iIAAA,CAAA,mBAAgB;8DAAE;;;;;;;;;;;iEAGrB,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;0DAAG,MAAM;;;;;;;;;;;;;;;;;;;;;;0CAMjB,8OAAC,gIAAA,CAAA,OAAI;gCAAC,WAAU;;kDACf,8OAAC,gIAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;0DAChB,8OAAC,gIAAA,CAAA,YAAS;gDAAC,WAAU;0DAAwB;;;;;;;;;;;;kDAE/C,8OAAC,gIAAA,CAAA,cAAW;kDACT,0BACC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;mDAEpB,QAAQ,qBACV,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;0DAAG,MAAM;;;;;;;;;;;;;;;;;;;;;;0CAMlB,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS,IAAM,OAAO,IAAI,CAAC;gCAAyB,SAAQ;gCAAU,WAAU;0CAAc;;;;;;;;;;;;;;;;;;;;;;;;AAOhH","debugId":null}}]
}